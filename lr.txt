#dataset generation
import pandas as pd
import numpy as np

# Define the number of rows for the dataset
num_rows = 1000

# Generate random data for the dataset
np.random.seed(0)
age = np.random.randint(18, 70, size=num_rows)
sex = np.random.choice(['Male', 'Female'], size=num_rows)
bmi = np.random.uniform(18.5, 35, size=num_rows)
children = np.random.randint(0, 5, size=num_rows)
smoker = np.random.choice(['Yes', 'No'], size=num_rows)
region = np.random.choice(['Northeast', 'Northwest', 'Southeast', 'Southwest'], size=num_rows)
charges = np.random.randint(5000, 80000, size=num_rows)
pre_existing_conditions = np.random.choice(['None', 'High blood pressure', 'Type 2 diabetes'], size=num_rows)
occupation = np.random.choice(['Engineer', 'Teacher', 'Sales Manager', 'Nurse', 'Accountant'], size=num_rows)
annual_income = np.random.choice(['$40,000', '$50,000', '$60,000', '$70,000', '$80,000'], size=num_rows)
health_habits = np.random.choice(['Non-smoker', 'Occasional smoker', 'Regular smoker', 'Regular gym-goer', 'Occasional drinker'], size=num_rows)
healthcare_utilization = np.random.choice(['Regular check-ups', 'Occasional doctor visits', 'Preventive screenings', 'Annual physical'], size=num_rows)
family_medical_history = np.random.choice(['None', 'Diabetes in family', 'Heart disease in family', 'Cancer in family'], size=num_rows)

# Create a DataFrame
df = pd.DataFrame({
    'Age': age,
    'Sex': sex,
    'BMI': bmi,
    'Children': children,
    'Smoker': smoker,
    'Region': region,
    'Charges': charges,
    'Pre-existing Conditions': pre_existing_conditions,
    'Occupation': occupation,
    'Annual Income': annual_income,
    'Health Habits': health_habits,
    'Healthcare Utilization': healthcare_utilization,
    'Family Medical History': family_medical_history
})

# Save the DataFrame as a CSV file
df.to_csv('insurance_dataset.csv', index=False)

#linear model
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the dataset
df = pd.read_csv('insurance_dataset.csv')

# Define the features (independent variables) and target variable
X = df[['Age', 'BMI', 'Children', 'Sex', 'Smoker', 'Region', 'Pre-existing Conditions', 'Occupation', 'Annual Income', 'Health Habits', 'Healthcare Utilization', 'Family Medical History']]
y = df['Charges']

# Convert categorical variables into dummy variables
X = pd.get_dummies(X, drop_first=True)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print('Mean Squared Error:', mse)
print('R^2 Score:', r2)

# Example prediction for a new data point
# Note: Ensure that the new data point has the same format as the training data (including dummy variables for categorical features)
new_data_point = [[40, 25.0, 2, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]]
predicted_charge = model.predict(new_data_point)
print('Predicted Charge for New Data Point:', predicted_charge[0])
